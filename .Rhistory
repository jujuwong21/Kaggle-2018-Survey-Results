summarize(prop = n() / 5253) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop)))
student_program_plot <- ggplot(programming_student, aes(x = programming_lang,
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2), family = "HersheySans",
vjust = -0.5)) +
scale_fill_manual(values=c("#f98cad", "#00c58f", "#00c0d1", "#90b844",
"#dba157")) +
ylim(c(0, 0.7)) +
labs(title = "Student",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
# Data Scientist
programming_datascience <- multiple_choice_data %>%
filter(`Select the title most similar to your current role (or most recent title if retired): - Selected Choice` == "Data Scientist") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 4137) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop)))
datascientist_program_plot <- ggplot(programming_datascience, aes(x = fct_rev(fct_reorder(programming_lang, prop)),
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2)), family = "HersheySans",
vjust = -0.5) +
scale_fill_manual(values=c("#f98cad", "#dba157", "#90b844", "#e98be0",
"#00c58f")) +
ylim(c(0, 0.87)) +
labs(title = "Data Scientist",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
# Software Engineer
programming_software <- multiple_choice_data %>%
filter(`Select the title most similar to your current role (or most recent title if retired): - Selected Choice` == "Software Engineer") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 3130) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop))) %>%
mutate(programming_lang = fct_recode(programming_lang,
"Javascript" = "Javascript/Typescript"))
software_program_plot <- ggplot(programming_software, aes(x = fct_rev(fct_reorder(programming_lang, prop)),
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2)), family = "HersheySans",
vjust = -0.5) +
scale_fill_manual(values=c("#f98cad", "#dba157", "#91a8f2", "#00c0d1",
"#00c58f")) +
ylim(c(0, 0.75)) +
labs(title = "Software Engineer",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
# Data Analyst
programming_analyst <- multiple_choice_data %>%
filter(`Select the title most similar to your current role (or most recent title if retired): - Selected Choice` == "Data Analyst") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 1922) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop))) %>%
mutate(programming_lang = fct_recode(programming_lang,
"VBA" = "Visual Basic/VBA",
"SAS" = "SAS/STATA"))
analyst_program_plot <- ggplot(programming_analyst, aes(x = fct_rev(fct_reorder(programming_lang, prop)),
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2)), family = "HersheySans",
vjust = -0.5) +
ylim(c(0, 0.7)) +
scale_fill_manual(values=c("#f98cad", "#dba157", "#90b844", "plum2",
"lavenderblush3")) +
labs(title = "Data Analyst",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
grid.arrange(student_program_plot, datascientist_program_plot,
software_program_plot, analyst_program_plot, nrow = 2)
# Tech
programming_tech <- multiple_choice_data %>%
filter(`In what industry is your current employer/contract (or your most recent employer if retired)? - Selected Choice` == "Computers/Technology") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 5584) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop))) %>%
mutate(programming_lang = fct_recode(programming_lang,
"Javascript" = "Javascript/Typescript"))
tech_program_plot <- ggplot(programming_tech, aes(x = programming_lang,
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2), family = "HersheySans",
vjust = -0.5)) +
scale_fill_manual(values=c("#f98cad", "#dba157", "#90b844", "#00c0d1",
"#91a8f2")) +
ylim(c(0, 0.82)) +
labs(title = "Computers/Technology",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
# Academia
programming_academia <- multiple_choice_data %>%
filter(`In what industry is your current employer/contract (or your most recent employer if retired)? - Selected Choice` == "Academics/Education") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 2749) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop)))
academia_program_plot <- ggplot(programming_academia, aes(x = programming_lang,
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2), family = "HersheySans",
vjust = -0.5)) +
scale_fill_manual(values=c("#f98cad", "#90b844", "#00c58f", "#dba157",
"snow3")) +
ylim(c(0, 0.75)) +
labs(title = "Academia",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
# Finance
programming_finance <- multiple_choice_data %>%
filter(`In what industry is your current employer/contract (or your most recent employer if retired)? - Selected Choice` == "Accounting/Finance") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 1433) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop))) %>%
mutate(programming_lang = fct_recode(programming_lang,
"Javascript" = "Javascript/Typescript"))
finance_program_plot <- ggplot(programming_finance, aes(x = programming_lang,
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2), family = "HersheySans",
vjust = -0.5)) +
scale_fill_manual(values=c("#f98cad", "#dba157", "#90b844", "#00c0d1",
"#e98be0")) +
ylim(c(0, 0.78)) +
labs(title = "Accounting/Finance",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
# Online Services
programming_online <- multiple_choice_data %>%
filter(`In what industry is your current employer/contract (or your most recent employer if retired)? - Selected Choice` ==
"Online Service/Internet-based Services") %>%
select(contains("What programming languages do you use on a regular basis? (Select all that apply")) %>%
gather(programming_lang, language) %>%
filter(!is.na(language)) %>%
filter(language != "Other" & language != "None") %>%
mutate(programming_lang = strsplit(programming_lang, "- ") %>%
vapply("[", "", 3)) %>%
group_by(programming_lang) %>%
filter(programming_lang != "Text") %>%
summarize(prop = n() / 871) %>%
top_n(5, w = prop) %>%
mutate(programming_lang = fct_rev(fct_reorder(programming_lang, prop))) %>%
mutate(programming_lang = fct_recode(programming_lang,
"Javascript" = "Javascript/Typescript"))
online_program_plot <- ggplot(programming_online, aes(x = programming_lang,
y = prop, fill = programming_lang)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(prop, 2), family = "HersheySans",
vjust = -0.5)) +
scale_fill_manual(values=c("#f98cad", "#dba157", "#90b844",
"#91a8f2", "#e98be0")) +
ylim(c(0, 0.82)) +
labs(title = "Online Services",
x = "Programming Language", y = "Prop. of Responses") +
my_theme
grid.arrange(tech_program_plot, academia_program_plot, finance_program_plot,
online_program_plot, nrow = 2)
multiple_choice_data %>%
select("analysis_tools" = "What is the primary tool that you use at work or school to analyze data? (include text response) - Selected Choice") %>%
group_by(analysis_tools) %>%
filter(!is.na(analysis_tools)) %>%
summarize(count = n()) %>%
mutate(analysis_tools = fct_rev(fct_reorder(analysis_tools, count)))%>%
mutate(analysis_tools = fct_recode(analysis_tools,
"Advanced  Stat" = "Advanced statistical software (SPSS, SAS, etc.)",
"Basic Stat" = "Basic statistical software (Microsoft Excel, Google Sheets, etc.)",
"Business Intelligence" = "Business intelligence software (Salesforce, Tableau, Spotfire, etc.)",
"Cloud-based" = "Cloud-based data software & APIs (AWS, GCP, Azure, etc.)",
"Local Environment" = "Local or hosted development environments (RStudio, JupyterLab, etc.)",
"Other" = "Other")) %>%
ggplot(aes(x = analysis_tools, y = count, fill = analysis_tools)) +
geom_bar(stat = "identity") +
scale_fill_discrete_qualitative(palette = "Set2") +
geom_text(aes(label = count), family = "HersheySans", vjust = -0.5, size=3) +
labs(title = "Primary Tool Types to Analyze Data", x = "Analysis Tool Type",
y = "Number of Responses") +
my_theme
multiple_choice_data %>%
select(contains("Which of the following big data and analytics products have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice")) %>%
gather(products, product) %>%
filter(!is.na(product)) %>%
filter(product != "Other" & product != "None") %>%
mutate(products = strsplit(products, "- ") %>%
vapply("[", "", 3)) %>%
group_by(products) %>%
summarize(count = n()) %>%
top_n(5, w = count) %>%
mutate(products = fct_rev(fct_reorder(products, count))) %>%
ggplot(aes(x = products, y = count, fill = products)) +
geom_bar(stat = "identity") +
geom_text(aes(label = count), family = "HersheySans",
vjust = -0.5) +
scale_fill_discrete_qualitative(palette = "Set2") +
labs(title = "Top 5 Big Data & Analytics Products",
x = "Product", y = "Number of Responses") +
my_theme
ml_regular <- multiple_choice_data %>%
select(contains("What machine learning frameworks have you used in the past 5 years? (Select")) %>%
gather(ml_library, library) %>%
filter(!is.na(library)) %>%
filter(library != "Other" & library != "None") %>%
mutate(ml_library = strsplit(ml_library, "- ") %>%
vapply("[", "", 3)) %>%
group_by(ml_library) %>%
filter(ml_library != "Text") %>%
summarize(regular_prop = n() / 18697) %>%
top_n(7, w = regular_prop) %>%
mutate(ml_library = fct_rev(fct_reorder(ml_library, regular_prop)),
ml_library = fct_recode(ml_library, "scikit" = "Scikit-Learn"))
ml_most <- multiple_choice_data %>%
select("ml_library" =
"Of the choices that you selected in the previous question, which ML library have you used the most? - Selected Choice") %>%
group_by(ml_library) %>%
filter(!is.na(ml_library)) %>%
summarize(most_often_prop = n() / 12990) %>%
mutate( ml_library = fct_recode(ml_library, "scikit" = "Scikit-Learn"))
ml <- ml_regular %>% left_join(ml_most, by = "ml_library")
ml <- gather(ml, type, proportion, regular_prop:most_often_prop)
ml <- ml %>% mutate(type = factor(type,
levels = c("regular_prop", "most_often_prop"),
labels = c("Use Regularly",
"Use the Most Often")),
ml_library = fct_relevel(ml_library,
"scikit", "TensorFlow", "Keras",
"randomForest", "Xgboost", "PyTorch",
"Caret"))
ggplot(ml, aes(x = ml_library, y = proportion, fill = ml_library)) +
geom_bar(stat='identity', position = "dodge") +
scale_fill_discrete_qualitative(palette = "Set2") +
scale_y_continuous(labels=scales::percent_format(accuracy = 1)) +
geom_text(aes(label = round(100*proportion, 1)),
family = "HersheySans", vjust = -0.5) +
facet_wrap(type~., scales = "free") +
labs(title = "Top 7 Most Popular ML Libraries", x = "ML Library",
y = "% of Respondents") +
my_theme
ds_regular <- multiple_choice_data %>%
select(contains("What data visualization libraries or tools have you used in the past 5 years?")) %>%
gather(data_vis, library) %>%
filter(!is.na(library)) %>%
filter(library != "Other" & library != "None") %>%
mutate(data_vis = strsplit(data_vis, "- ") %>%
vapply("[", "", 3)) %>%
group_by(data_vis) %>%
filter(data_vis != "Text") %>%
summarize(regular_prop = n() / 18593) %>%
top_n(7, w = regular_prop) %>%
mutate(data_vis = fct_rev(fct_reorder(data_vis, regular_prop)))
ds_most <- multiple_choice_data %>%
select("data_vis" =
"Of the choices that you selected in the previous question, which specific data visualization library or tool have you used the most? - Selected Choice") %>%
group_by(data_vis) %>%
filter(!is.na(data_vis)) %>%
summarize(most_often_prop = n() / 12185)
ds <- ds_regular %>% left_join(ds_most, by = "data_vis")
ds <- gather(ds, type, proportion, regular_prop:most_often_prop)
ds <- ds %>% mutate(type = factor(type,
levels = c("regular_prop", "most_often_prop"),
labels = c("Use Regularly",
"Use the Most Often")),
data_vis = fct_relevel(data_vis, "Matplotlib", "Seaborn", "ggplot2",
"Plotly", "Shiny", "D3", "Bokeh"))
ggplot(ds, aes(x = data_vis, y = proportion, fill = data_vis)) +
geom_bar(stat='identity', position = "dodge") +
scale_fill_discrete_qualitative(palette = "Set2") +
scale_y_continuous(labels=scales::percent_format(accuracy = 1)) +
geom_text(aes(label = round(100*proportion, 1)),
family = "HersheySans", vjust = -0.5) +
facet_wrap(type~., scales = "free") +
labs(title = "Top 7 Most Popular Data Visualization Libraries",
x = "Data Visualization Library", y = "% of Respondents") +
my_theme
multiple_choice_data %>%
select(contains("Select any activities that make up an important part of your role at work: (Select all that apply) - Selected Choice")) %>%
gather(step, vote) %>%
filter(!is.na(vote)) %>%
mutate(step = strsplit(step, "- ") %>%
vapply("[", "", 3)) %>%
group_by(step) %>%
summarize(prop = n() / 19518) %>%
mutate(step = fct_reorder(step, prop),
step = fct_recode(step,
"Build/run data infrastructure" = "Build and/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data",
"Build prototypes" = "Build prototypes to explore applying machine learning to new areas",
"Build/run ML services" = "Build and/or run a machine learning service that operationally improves my product or workflows",
"Analyze and understand data" = "Analyze and understand data to influence product or business decisions",
"None" = "None of these activities are an important part of my role at work",
"Research ML Advances" = "Do research that advances the state of the art of machine learning")) %>%
filter(step != "Other") %>%
ggplot(aes(x = step, y = prop, fill = step)) +
geom_bar(stat = 'identity') +
scale_fill_discrete_qualitative(palette = "Set2") +
geom_text(aes(label = round(prop, 2)), family = "HersheySans", hjust= -0.15, size=3) +
coord_flip(ylim = c(0, 0.52)) +
labs(title = "Activities that are Important to Role at Work",
x = "Activity", y = "Proportion of Responses") +
my_theme
multiple_choice_data %>%
select(contains("During a typical data science project at work or school, approximately what proportion of your time is devoted to the following? (Answers must add up to 100%)")) %>%
gather(step, vote) %>%
filter(!is.na(vote)) %>%
mutate(step = strsplit(step, "- ") %>%
vapply("[", "", 2)) %>%
mutate(step = fct_recode(step, "Putting model in production" = "Putting the model into production",
"Finding/communicating insights" =
"Finding insights in the data and communicating with stakeholders"),
step = fct_relevel(step, "Other","Putting model in production","Finding/communicating insights",
"Model building/model selection", "Visualizing data","Cleaning data", "Gathering data")) %>%
group_by(step) %>%
summarize(prop = round(mean(vote), 2)) %>%
ggplot(aes(x = step, y = prop, fill = step)) +
geom_text(aes(label = prop), family = "HersheySans", hjust= -0.15, size=3) +
geom_bar(stat = 'identity') +
scale_fill_discrete_sequential(palette = "ag_Sunset") +
coord_flip(ylim = c(0, 25)) +
labs(title = "Avg. Prop. of Time Spent When Working on a Project",
x = "Task", y = "Proportion of Time") +
my_theme
coding_time <-  multiple_choice_data %>%
select("job_title" = "Select the title most similar to your current role (or most recent title if retired): - Selected Choice", "percent"="Approximately what percent of your time at work or school is spent actively coding?") %>%
drop_na() %>%
# Top four jobs
filter(job_title %in% c("Student", "Data Scientist", "Software Engineer", "Data Analyst")) %>%
mutate(percent = fct_recode(percent, "0%" = "0% of my time",
"1-25%" = "1% to 25% of my time",
"25-49%" = "25% to 49% of my time",
"50-74%" = "50% to 74% of my time",
"75-99%" = "75% to 99% of my time",
"100%" = "100% of my time"),
percent = fct_relevel(percent, "100%", after = Inf)) %>%
group_by(job_title, percent) %>%
summarize(total = n())
coding_time_all <- multiple_choice_data %>%
select("percent"="Approximately what percent of your time at work or school is spent actively coding?") %>%
drop_na() %>%
mutate(job_title = "All",
percent = fct_recode(percent, "0%" = "0% of my time",
"1-25%" = "1% to 25% of my time",
"25-49%" = "25% to 49% of my time",
"50-74%" = "50% to 74% of my time",
"75-99%" = "75% to 99% of my time",
"100%" = "100% of my time"),
percent = fct_relevel(percent, "100%", after = Inf)) %>%
group_by(job_title, percent) %>%
summarize(total = n())
coding_time <- rbind(coding_time, coding_time_all)
ggplot(coding_time, aes(x = percent, y = total, fill = job_title)) +
geom_bar(stat="identity") +
facet_grid(job_title~., scales = 'free') +
scale_fill_discrete_qualitative(palette = "Set2") +
labs(title = "Percent of Time Spent Coding by Job", x = "", y = "Number of Votes") +
my_theme
multiple_choice_data %>%
select(contains("What percentage of your current machine learning/data science training falls under each category?")) %>%
gather(step, vote) %>%
filter(!is.na(vote)) %>%
mutate(step = strsplit(step, "- ") %>%
vapply("[", "", 2)) %>%
group_by(step) %>%
filter(step != "Other") %>%
summarize(percent = round(mean(vote), 2)) %>%
mutate(step = fct_recode(step, "Online Courses" = "Online courses (Coursera, Udemy, edX, etc.)"),
step = fct_rev(fct_reorder(step, percent))) %>%
ggplot(aes(x = step, y = percent, fill = step)) +
geom_bar(stat = "identity") +
geom_text(aes(label = percent), family = "HersheySans", vjust = -0.5) +
scale_fill_discrete_qualitative(palette = "Set2") +
labs(title = "Average Percent of Training by Category", x = "Training Category",
y = "Average Percent") +
my_theme
multiple_choice_data %>%
select(contains("Who/what are your favorite media sources that report on data science topics? (Select all that apply)")) %>%
gather(step, vote) %>%
filter(!is.na(vote)) %>%
mutate(step = strsplit(step, "- ") %>%
vapply("[", "", 3)) %>%
group_by(step) %>%
summarize(count = n()) %>%
filter(step != "Text", step != "None/I do not know") %>%
top_n(7, count) %>%
mutate(step = fct_reorder(step, count)) %>%
ggplot(aes(x = step, y = count, fill = step)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = count), family = "HersheySans", hjust= -0.15, size=3) +
scale_fill_discrete_qualitative(palette = "Set2") +
coord_flip(ylim = c(0, 5750)) +
labs(title = "Favorite Media Sources for Data Science", y = "Number of Votes",
x = "Media Source") +
my_theme
multiple_choice_data %>%
select(contains("Which better demonstrates expertise in data science: academic achievements or independent projects? - Your views:")) %>%
gather(step, vote) %>%
mutate(vote = fct_recode(vote,
"Agree" = "Independent projects are much more important than academic achievements",
"Slightly Agree" = "Independent projects are slightly more important than academic achievements",
"Both Important" = "Independent projects are equally important as academic achievements",
"Both Important" = "No opinion; I do not know",
"Slightly Disagree" = "Independent projects are slightly less important than academic achievements",
"Disagree" = "Independent projects are much less important than academic achievements"),
vote = fct_relevel(vote, "Agree", "Slightly Agree", "Both Important",
"Slightly Disagree", "Disagree")) %>%
group_by(vote) %>%
summarize(count = n()) %>%
drop_na() %>%
ggplot(aes(x = vote, y = count, fill = vote)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("#04d3c3", "#b2e7df", "#c4c4c4", "#fcd1e8",
"#e092c2")) +
geom_text(aes(label = count), family = "HersheySans", vjust = -0.5) +
labs(title = "Independent projects are more important than academic achievements",
x = "Response", y = "Number of People") +
my_theme
oc_regular <- multiple_choice_data %>%
select(contains("On which online platforms have you begun or completed data science courses? (Select all that apply)")) %>%
gather(platform_q, platform) %>%
filter(!is.na(platform)) %>%
filter(platform != "Other" & platform != "None") %>%
mutate(platform_q = strsplit(platform_q, "- ") %>%
vapply("[", "", 3)) %>%
group_by(platform_q) %>%
filter(platform_q != "Text") %>%
summarize(regular_prop = n() / 15672) %>%
top_n(6, w = regular_prop) %>%
mutate(platform_q = fct_rev(fct_reorder(platform_q, regular_prop)))
oc_most <- multiple_choice_data %>%
select("platform_q" =
"On which online platform have you spent the most amount of time? - Selected Choice") %>%
group_by(platform_q) %>%
filter(!is.na(platform_q)) %>%
summarize(most_often_prop = n() / 9671)
oc <- oc_regular %>% left_join(oc_most, by = "platform_q")
oc <- gather(oc, type, proportion, regular_prop:most_often_prop)
oc <- oc %>% mutate(type = factor(type,
levels = c("regular_prop", "most_often_prop"),
labels = c("Use Regularly",
"Use the Most Often")),
platform_q = fct_relevel(platform_q, "Coursera", "Udemy", "DataCamp", "Kaggle Learn",
"Udacity", "edX"))
ggplot(oc, aes(x = platform_q, y = proportion, fill = platform_q)) +
geom_bar(stat='identity', position = "dodge") +
scale_fill_discrete_qualitative(palette = "Set2") +
scale_y_continuous(labels=scales::percent_format(accuracy = 1)) +
geom_text(aes(label = round(100*proportion, 1)),
family = "HersheySans", vjust = -0.5) +
facet_wrap(type~., scales = "free") +
labs(title = "Top 6 Most Popular Online Learning Platforms",
x = "Online Platform", y = "% of Respondents") +
my_theme
major_data <- demographics %>%
filter(!is.na(major) & major != "I never declared a major") %>%
mutate(major = fct_rev(fct_infreq(major))) %>%
group_by(major) %>%
summarize(count = n())
levels(major_data$major) <- c("Computer Science", "Math/Stats", "Engineering",
"Business", "Life Sciences", "Other", "Social Sciences",
"Physical Sciences", "IT/Systems", "Humanities",
"Environmental Science", "Arts")
ggplot(major_data, aes(x = major, y = count)) +
geom_bar(stat="identity") +
geom_text(aes(label = count), family = "HersheySans", hjust= -0.15, size=3) +
#  coord_flip(ylim = c(0, 10000)) +
labs(title = "Distribution of Survey Results by Student Major",
x = "Major", y = "Number of Surveys") +
my_theme
